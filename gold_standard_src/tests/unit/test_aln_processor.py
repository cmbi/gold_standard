from nose.tools import eq_

import gold_standard_src.gold_standard.aln_processor as ap


def test_find_positions_to_fill_in():
    input_aln_dict = {
            "4FDXA":  "PIIQMNLLEGRTVEQKRNAVAAITEAVVRTLDVRPDQVRILINELGVEHFSVAGQTAAMRQ",
            "3RY0A":  "PLIRVTLLEGRSPQEVAALGEALTAAAHETLGTPVEAVRVIVEETPPERWFVGGRSVAERR",
            "4X1CH":  "PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASKV-",
            "1MWWA":  "TVIEINLMAGRMEGTKKRLIKMLFSELEYKLGIRAHDVEITIKEQPAHCWGFRGMTG--EA",
            "3M21A":  "PFINIKLVpgPTNEQKQQLIEGVSDLMVKVLNKNKASIVVIIDEVDSNNYGLGGESVHHLR",
            "4FAZA":  "PFAQIYLIEGRTEEQKRAVIEKVTQAMMEAVGAPKENVRVWIHDVPKENWGIGGVSAKALG",
            "3MB2A":  "LLLRITMLEGRSTEQKAELARALSAAAAAAFDVPLAEVRLIIQEVPPTHWTVGGISMA-EL",
            "1OTFA":  "PIAQLYIIEGRTDEQKETLIRQVSEAMANSLDAPLERVRVLITEMPKNHFGIGGEPASK--",
            "2OPAA":  "PYVTVKMLEGRTDEQKRNLVEKVTEAVKETTGASEEKIVVFIEEMRKDHYAVAGKRLSDME",
    }

    master_full_seq = "PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASKVRA"
    master_aln_seq = input_aln_dict["4X1CH"]

    positions_to_fill_in = ap.find_positions_to_fill_in(master_full_seq, master_aln_seq)
    eq_(positions_to_fill_in, [(33, 'S'), (60, 'R'), (60, 'A')])


def test_fill_in_gaps():
    aln_dict = {
            "4FDXA":  "PIIQMNLLEGRTVEQKRNAVAAITEAVVRTLDVRPDQVRILINELGVEHFSVAGQTAAMRQ",
            "3RY0A":  "PLIRVTLLEGRSPQEVAALGEALTAAAHETLGTPVEAVRVIVEETPPERWFVGGRSVAERR",
            "4X1CH":  "PIAQIHILEGRSDEQKETLIREVSEAISRSLDapLTSVRVIITEMAKGHFGIGGELASKV-",
            "1MWWA":  "TVIEINLMAGRMEGTKKRLIKMLFSELEYKLGIRAHDVEITIKEQPAHCWGFRGMTG--EA",
            "3M21A":  "PFINIKLVpgPTNEQKQQLIEGVSDLMVKVLNKNKASIVVIIDEVDSNNYGLGGESVHHLR",
            "4FAZA":  "PFAQIYLIEGRTEEQKRAVIEKVTQAMMEAVGAPKENVRVWIHDVPKENWGIGGVSAKALG",
            "3MB2A":  "LLLRITMLEGRSTEQKAELARALSAAAAAAFDVPLAEVRLIIQEVPPTHWTVGGISMA-EL",
            "1OTFA":  "PIAQLYIIEGRTDEQKETLIRQVSEAMANSLDAPLERVRVLITEMPKNHFGIGGEPASK--",
            "2OPAA":  "PYVTVKMLEGRTDEQKRNLVEKVTEAVKETTGASEEKIVVFIEEMRKDHYAVAGKRLSDME",
    }

    master_full_seq = "PIAQIHILEGRSDEQKETLIREVSEAISRSLDASPLTSVRVIITEMAKGHFGIGGELASKVRA"
    master_id = "4X1CH"
    master_aln_seq = aln_dict[master_id]

    positions_to_fill_in = ap.find_positions_to_fill_in(master_full_seq, master_aln_seq)
    eq_(positions_to_fill_in, [(33, 'S'), (60, 'R'), (60, 'A')])

    ap.fill_in_gaps(aln_dict, positions_to_fill_in, master_id, master_full_seq)

    expected = {
        "4FDXA":  "PIIQMNLLEGRTVEQKRNAVAAITEAVVRTLDV-RPDQVRILINELGVEHFSVAGQTAAMRQ--",
        "3RY0A":  "PLIRVTLLEGRSPQEVAALGEALTAAAHETLGT-PVEAVRVIVEETPPERWFVGGRSVAERR--",
        "4X1CH":  "PIAQIHILEGRSDEQKETLIREVSEAISRSLDASPLTSVRVIITEMAKGHFGIGGELASKV-RA",
        "1MWWA":  "TVIEINLMAGRMEGTKKRLIKMLFSELEYKLGI-RAHDVEITIKEQPAHCWGFRGMTG--EA--",
        "3M21A":  "PFINIKLVpgPTNEQKQQLIEGVSDLMVKVLNK-NKASIVVIIDEVDSNNYGLGGESVHHLR--",
        "4FAZA":  "PFAQIYLIEGRTEEQKRAVIEKVTQAMMEAVGA-PKENVRVWIHDVPKENWGIGGVSAKALG--",
        "3MB2A":  "LLLRITMLEGRSTEQKAELARALSAAAAAAFDV-PLAEVRLIIQEVPPTHWTVGGISMA-EL--",
        "1OTFA":  "PIAQLYIIEGRTDEQKETLIRQVSEAMANSLDA-PLERVRVLITEMPKNHFGIGGEPASK----",
        "2OPAA":  "PYVTVKMLEGRTDEQKRNLVEKVTEAVKETTGA-SEEKIVVFIEEMRKDHYAVAGKRLSDME--",
    }

    eq_(aln_dict, expected)
